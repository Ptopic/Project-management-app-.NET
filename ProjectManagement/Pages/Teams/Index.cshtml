@page
@using ProjectManagement.Entities.Enums
@model ProjectManagement.Pages.Teams.Index

@{
    ViewData["Title"] = "Teams | Index";
    var keyword = ViewData["Keyword"] as string;
    var previous = Model.Teams.HasPreviousPage ? "" : "disabled";
    var next = Model.Teams.HasNextPage ? "" : "disabled";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="OnGetAsync" method="get">
    <div class="row">
        <div class="input-group">
            <input type="search" class="form-control" placeholder="Search..." name="searchString" value="@keyword">
            <button type="submit" class="btn btn-primary mr-2"><i class="bi bi-search"></i></button>
            <a asp-action="" class="btn btn-secondary clear-btn">Clear</a>
        </div>
    </div>
</form>

<a asp-page="/Teams/Create" class="btn btn-success mt-2">
    <i class="bi bi-plus"></i>
    Create new team
</a>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Members</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var team in Model.Teams)
        {
            @if (User.IsInRole(Roles.Admin.ToString()))
            {
                <tr>
                    <td class="align-middle">@team.Name</td>
                    @if(team.Members.Count > 0)
                    {
                        <td class="align-middle">
                            @foreach (var member in team.Members)
                            {
                                <p>@member.FirstName @member.LastName</p>
                            }
                        </td>
                    }
                    else {
                        <td class="align-middle">No members</td>
                    }
                    <td class="align-middle">
                        <a asp-page="/Teams/Details" asp-route-id="@team.Id" class="btn btn-primary">
                            <i class="bi bi-eye"></i>
                            Details
                        </a>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-page="/Teams/Edit" asp-route-id="@team.Id" class="btn btn-warning">
                                <i class="bi bi-pen"></i>
                                Edit
                            </a>
                            <a asp-page="/Teams/Delete" asp-route-id="@team.Id" class="btn btn-danger">
                                <i class="bi bi-trash3"></i>
                                Delete
                            </a>
                        }
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>

<div>
    <ul class="pagination">
        <li class="page-item">
            <a asp-page="./Index"
               asp-route-pageIndex="@(Model.Teams.PageIndex - 1)"
               class="page-link btn @previous"
               role="button">
                Previous
            </a>
        </li>
        @for (var i = 1; i <= Model.Teams.TotalPages; i++)
        {
            <li class="page-item @(i == Model.Teams.PageIndex ? "active" : "")">
                <a asp-page="./Index"
                   asp-route-pageIndex="@i"
                   class="page-link">
                    @i
                </a>
            </li>
        }
        <li class="page-item">
            <a asp-page="./Index"
               asp-route-pageIndex="@(Model.Teams.PageIndex + 1)"
               class="page-link btn @next"
               role="button">
                Next
            </a>
        </li>
    </ul>
</div>