@page
@using ProjectManagement.Entities.Enums
@model ProjectManagement.Pages.Users.Index

@{
    ViewData["Title"] = "Users | Index";
    var keyword = ViewData["Keyword"] as string;
    var currentFilter = ViewData["CurrentFilter"] as string;
    var previous = Model.Users.HasPreviousPage ? "" : "disabled";
    var next = Model.Users.HasNextPage ? "" : "disabled";
}

<h1>@ViewData["Title"]</h1>

<form asp-action="OnGetAsync" method="get">
    <div class="row">
        <div class="input-group">
            <input type="search" class="form-control" placeholder="Search..." name="searchString" value="@keyword">
            <select class="form-select" name="currentFilter">
                <option value="">All user roles</option>
                @foreach (var category in Enum.GetNames(typeof(Roles)))
                {
                    <option value="@category" selected="@(category == currentFilter)">@category</option>
                }
            </select>
            <button type="submit" class="btn btn-primary mr-2"><i class="bi bi-search"></i></button>
            <a asp-action="" class="btn btn-secondary clear-btn">Clear</a>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
        <tr>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Email</th>
            <th scope="col">Role</th>
            <th scope="col">Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in Model.Users)
        {
            @if (User.IsInRole(Roles.Admin.ToString()))
            {
                <tr>
                    <td class="align-middle">@user.FirstName</td>
                    <td class="align-middle">@user.LastName</td>
                    <td class="align-middle">@user.Email</td>
                    <td class="align-middle">@user.Role</td>
                    <td class="align-middle">
                        <a asp-page="/Users/Details" asp-route-id="@user.Id" class="btn btn-primary">
                            <i class="bi bi-eye"></i>
                            Details
                        </a>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-page="/Users/Edit" asp-route-id="@user.Id" class="btn btn-warning">
                                <i class="bi bi-pen"></i>
                                Edit
                            </a>
                            <a asp-page="/Users/Delete" asp-route-id="@user.Id" class="btn btn-danger">
                                <i class="bi bi-trash3"></i>
                                Delete
                            </a>
                        }
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>

<div>
    <ul class="pagination">
        <li class="page-item">
            <a asp-page="./Index"
               asp-route-pageIndex="@(Model.Users.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link btn @previous"
               role="button">
                Previous
            </a>
        </li>
        @for (var i = 1; i <= Model.Users.TotalPages; i++)
        {
            <li class="page-item @(i == Model.Users.PageIndex ? "active" : "")">
                <a asp-page="./Index"
                   asp-route-pageIndex="@i"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="page-link">
                    @i
                </a>
            </li>
        }
        <li class="page-item">
            <a asp-page="./Index"
               asp-route-pageIndex="@(Model.Users.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link btn @next"
               role="button">
                Next
            </a>
        </li>
    </ul>
</div>